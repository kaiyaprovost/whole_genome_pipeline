## do this plot for each species
df = read.table("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER3_TRAITS/Distances/GDM_results/bivariate_gdm_results_useold.csv",
sep=",",
header=T,fill=T,
stringsAsFactors = F,
skip = 0)
for(spp in sort(unique(df$SPECIES))){
print(spp)
}
dfs = df[df$SPECIES==spp,]
dfs
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center",HZAR_width)]
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width")]
dfs
dfs = dfs[complete.cases(dfs),]
dfs
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
dfs_c
dfs_g
## do this plot for each species
df = read.table("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER3_TRAITS/Distances/GDM_results/bivariate_gdm_results_useold.csv",
sep=",",
header=T,fill=T,
stringsAsFactors = F,
skip = 0)
head(df)
palette()
unique(df$DATASET)
?viridis
library(viridis)
?viridis
## do this plot for each species
viridis(40)
nrow(dfs_c)
## do this plot for each species
palette(viridis(40))
plot(x=c(0,20),y=c(0,1),type="n")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
## hzar cline function =
clinefunc = function (x,center,width,pMin,pMax) {
pMin + (pMax - pMin) * (1/(1 + exp(-((x - center) * 4/width))))
}
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width")]
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
dfs = dfs[complete.cases(dfs),]
plot(x=c(0,20),y=c(0,1),type="n")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax)
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
center=thisrow$HZAR_center
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
thisrow$HZAR_center
width=thisrow$HZAR_width
hisrow$HZAR_width
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
dfs = dfs[complete.cases(dfs),]
plot(x=c(0,20),y=c(0,1),type="n")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col="black",
add=T,col="black",lwd=3)
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col="black",
add=T,lwd=3)
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col="black",
add=T,lwd=3)
plot(x=c(0,20),y=c(0,1),type="n")
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col="black",
add=T,lwd=3)
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=3)
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
dfs = dfs[complete.cases(dfs),]
plot(x=c(0,20),y=c(0,1),type="n")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=3)
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
dfs = dfs[complete.cases(dfs),]
plot(x=c(0,20),y=c(0,1),type="n")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5)
plot(x=c(0,20),y=c(0,1),type="n",main=spp)
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5)
par(mfrow=c(3,4))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
dfs = dfs[complete.cases(dfs),]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5)
}
dfs
par(mfrow=c(3,4))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
dfs = dfs[complete.cases(dfs),]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5)
}
}
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
nrow(dfs)
dfs
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5)
}
par(mfrow=c(3,4))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5)
}
}
par(mfrow=c(3,4))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=3)
}
}
par(mfrow=c(1,1),mar=c(2,2,0,0))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=3)
}
}
par(mfrow=c(1,1),mar=c(2,2,2,2))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=3)
}
}
par(mfrow=c(1,1),mar=c(4,4,2,0))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=3)
}
}
par(mfrow=c(1,1),mar=c(4,4,2,0.1))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=3)
}
}
paste("~/",spp,"_hzar_manual_make_cline.pdf",sep="")
allspp = read.table("/Users/kprovost/allspp_hzar_chroms_npy_CLEAN.txt",sep="\t",header=T)
allspp
head(allspp)
## do this plot for each species
palette(viridis(40))
df = read.table("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER3_TRAITS/Distances/GDM_results/bivariate_gdm_results_useold.csv",
sep=",",
header=T,fill=T,
stringsAsFactors = F,
skip = 0)
par(mfrow=c(1,1),mar=c(4,4,2,0.1))
for(spp in sort(unique(df$SPECIES))){
pdf(paste("~/",spp,"_hzar_manual_make_cline.pdf",sep=""))
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=3)
}
}
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
par(mfrow=c(1,1),mar=c(4,4,2,0.1))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
pdf(paste("~/",spp,"_hzar_manual_make_cline.pdf",sep=""))
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=3)
dev.off()
}
}
par(mfrow=c(1,1),mar=c(4,4,2,0.1))
for(spp in sort(unique(df$SPECIES))){
print(spp)
dfs = df[df$SPECIES==spp,c("DATASET","HZAR_center","HZAR_width","HZAR_pmin","HZAR_pmax")]
dfs = dfs[complete.cases(dfs),]
if(nrow(dfs)>0){
pdf(paste("~/",spp,"_hzar_manual_make_cline.pdf",sep=""))
dfs_c = dfs[dfs$DATASET!="GENOME",]
dfs_g = dfs[dfs$DATASET=="GENOME",]
plot(x=c(0,20),y=c(0,1),type="n",main=spp,ylab="Cline probability",xlab="Distance")
for(i in 1:nrow(dfs_c)){
print(i)
thisrow = dfs_c[i,]
curve(clinefunc(x,center=thisrow$HZAR_center,width=thisrow$HZAR_width,pMin=thisrow$HZAR_pmin,pMax=thisrow$HZAR_pmax),col=i,
add=T)
}
curve(clinefunc(x,center=dfs_g$HZAR_center,width=dfs_g$HZAR_width,pMin=dfs_g$HZAR_pmin,pMax=dfs_g$HZAR_pmax),col="black",
add=T,lwd=5,lty=2)
dev.off()
}
}
