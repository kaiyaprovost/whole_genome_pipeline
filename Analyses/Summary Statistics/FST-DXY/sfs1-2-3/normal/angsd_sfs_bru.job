#!/bin/bash
#PBS -l select=1:ncpus=32:mem=32gb
#PBS -l walltime=5000:00:00
#PBS -N bru_sfs1
#PBS -j oe
#PBS -m ae
#PBS -M kprovost@amnh.org
#PBS -k oe

# change to the working directory
cd $PBS_O_WORKDIR
echo "pbsworkdir"
echo $PBS_O_WORKDIR
EXECDIR=`pwd`
export PATH=./:$PATH
echo $PATH

#Arguments:
## ref=reference sequence
ref=/home/kprovost/nas3/genomeresequencingFromLucas/Stur_chrom/pseudochromosomesSHORT.fasta

##References:
##Corvus -- Vireo
##Geospiza -- Cardinalis
##Parus -- Auriparus
##Sturnus -- Toxostoma, Campylorhynchus, Polioptila, Phainopepla
##Zonotrichia -- Amphispiza, Pipilo

## bam_list = list of BAM files
bamlist=/home/kprovost/nas3/ANGSD_pipeline/Campylorhynchus-brunneicapillus.bamlist

cd /vz-nas1-active/ProcessedGenomicReads/EVERY_PLATE/ANGSD/

date
time

time /home/kprovost/nas3/angsd/angsd -GL 2 \
-dosaf 1 \
-fold 1 \
-minInd 4 \
-minMapQ 20 \
-minQ 20 \
-nThreads 16 \
-ref $ref \
-anc $ref \
-bam $bamlist \
-out Campylorhynchus_brunneicapillus-sfs1


time 


# GENERATE SFS #####
# 
# no filtering
# /home/kprovost/nas3/ANGSD_pipeline/ngsTools/angsd/angsd -gl 1 -anc ancestral -dosaf 1
# or alot of filtering
# /home/kprovost/nas3/ANGSD_pipeline/ngsTools/angsd/angsd -gl 1 -anc ancestral -dosaf 1 -baq 1 -C 50 -minMapQ 30 -minQ 20
# folded 
# /home/kprovost/nas3/ANGSD_pipeline/ngsTools/angsd/angsd -gl 1 -fold 1 -dosaf 1
# 
# this will generate 3 files
# 1) angsdput.saf.idx 2) angsdput.saf.pos.gz 3) angsdput.saf.gz
# these are binary files that are formally defined in https://github.com/ANGSD/angsd/blob/newsaf/doc/formats.pdf
# 
# To find the global SFS based on the run from above simply do
# ./realSFS angsdput.saf.idx
# or only use chromosome 22
# ./realSFS angsdput.saf.idx -r 22
# 
# or specific regions
# ./realSFS angsdput.saf.idx -r 22:100000-150000000
# 
# or limit to a fixed number of sites
# ./realSFS angsdput.saf.idx -r 17 -nSites 10000000
# 
# or you can find the 2dim sf by
# ./realSFS ceu.saf.idx yri.saf.idx
# NB the program will find the intersect internally. No need for multiple runs with angsd main program.
# 
# or you can find the 3dim sf by
# ./realSFS ceu.saf.idx yri.saf.idx MEX.saf.idx
# 
# 
# 
# 
# 
# 
# 
# * NB the ancestral state needs to be supplied for the full SFS, but you can use the -fold 1 to estimate the folded SFS and then use the reference as ancestral.
# * NB the output from the -doSaf 2 are not sample allele frequency likelihoods but sample alle posteriors.
# And applying the realSFS to this output is therefore NOT the ML estimate of the SFS as described in the Nielsen 2012 paper,
# but the 'Incorporating deviations from Hardy-Weinberg Equilibrium (HWE)' section of that paper.
# 
# CURRENTLY: arg, beagle.gz, cov, inbreed, qopt, mafs.gz, selecton.gz
# 
# sfs straight from bam file? *******
# 
# Our program can estimate fst between populations. And has been generalized to give all pairwise fst estimates if you supply the command with multiple populations.
# 
# if you supply 3 populations, the program will also output the pbs statistic.
# NB we have removed the very unusefull unweighted fst estimator in the output, and have included a header. The output example below will be updated at some point.
# The procedure is
# 
# - Use angsd for calculating saf files for each population
# 
# 
# 
# 
# 
# - Use realSFS to calculate 2d sfs for each pair
# 
# - Use the above calculated 2dsfs as priors jointly with all safs from step1 to calculate fst binary files
# 
# - Use realSFS to extract the the fst values from the fst
# 
# NB; In the latest github version there is a different fst estimator which should be preferable for small sample sizes. Feel free to try that out with
# 
# this is with 2pops
# first calculate per pop saf for each populatoin
# ../angsd -b list1  -anc hg19ancNoChr.fa -out pop1 -dosaf 1 -gl 1
# ../angsd -b list2  -anc hg19ancNoChr.fa -out pop2 -dosaf 1 -gl 1
# calculate the 2dsfs prior
# ../misc/realSFS pop1.saf.idx pop2.saf.idx >pop1.pop2.ml
# prepare the fst for easy window analysis etc
# ../misc/realSFS fst index pop1.saf.idx pop2.saf.idx -sfs pop1.pop2.ml -fstout here
# get the global estimate
# ../misc/realSFS fst stats here.fst.idx 
# -> FST.Unweight:0.069395 Fst.Weight:0.042349
# below is not tested that much, but seems to work
# ../misc/realSFS fst stats2 here.fst.idx -win 50000 -step 10000 >slidingwindow