}
outfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_Dxy_WINDOWS_chrfix_",num_to_keep,"-",chrom,".txt",sep="")
pngfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxyMEAN_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sumfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySUMS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sdvfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySDVS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
print("SUBSETTING SCAFFOLDS")
scaff_subset = names(num_on_scaff)[1:num_to_keep]
son = sonb[sonb$chromo %in% scaff_subset,]
matches = match(son$chromo,scaff_subset)
son$chromnum = matches
son = son[order(son[,"chromnum"], son[,"position"] ),]
head(son)
summary(son$dxy)
summary(son$position)
closest_snp = min(son$position)
furthest_snp = max(son$position)
## son and chi are exactky the same! yay
nscaf = (length(scaff_subset))
print(paste("NUMBER OF SCAFFS TO OUTPUT:",nscaf))
nums = as.numeric(num_on_scaff)
scaf_list = c()
start_list = c()
mean_list = c()
dev_list = c()
snp_list = c()
sum_list = c()
print("BEGINNING SCAFFOLDS")
#for (i in 1:100) {
for (i in 1:length(scaff_subset)) {
print(paste(i," of ",nscaf,spp))
scaf = (scaff_subset[i])
number = nums[i]
this_scaf = son[son$chromo==scaf,]
#closest = min(this_scaf$position)
furthest = max(this_scaf$position)
## get windows
window_ends = seq(windowsize,max(furthest,windowsize),movesize)
window_starts = seq(1,furthest,movesize)
window_starts = window_starts[1:length(window_ends)]
windows = as.data.frame(cbind("starts"=window_starts,"ends"=window_ends))
print(nrow(windows))
for (j in 1:nrow(windows)){
window = windows[j,]
#print(window)
start = window$starts
end = window$ends
this_window = this_scaf[this_scaf$position>=start,]
this_window = this_window[this_window$position<=end,]
num_snps = nrow(this_window)
average_dxy = mean(this_window$dxy)
deviation_dxy = sd(this_window$dxy)
sum_dxy = sum(this_window$dxy)
scaf_list = c(scaf_list,scaf)
start_list = c(start_list,start)
mean_list = c(mean_list,average_dxy)
dev_list = c(dev_list,deviation_dxy)
snp_list = c(snp_list,num_snps)
sum_list = c(sum_list,sum_dxy)
}
output_dataframe = cbind(scaf_list,
as.numeric(start_list),
as.numeric(mean_list),
as.numeric(dev_list),
as.numeric(snp_list),
as.numeric(sum_list))
colnames(output_dataframe) = c("scafs","starts","means","stdvs","snps","sums")
}
head(output_dataframe)
png(pngfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"means"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Mean DXY",
ylim=c(0,1))
dev.off()
png(sumfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"sums"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Sum DXY")
dev.off()
write.table(output_dataframe,outfile)
png(sdvfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"stdvs"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="STDV DXY")
dev.off()
write.table(output_dataframe,outfile)
}
j
j %% 100
print(spp)
num_to_keep = orig_num_to_keep
#sonfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/raw/",spp,"_SON_Dxy_persite_chrfix.txt",sep="")
sppsonfiles = listsonfiles[grep(spp,listsonfiles)]
for(sonfile in sppsonfiles) {
chrom=strsplit(strsplit(sonfile,"-")[[1]][2],"\\.")[[1]][1]
print("READING CSV")
sonb = read.csv(sonfile,sep="\t",header=T)
print(chrom)
print("READING IN SCAFFOLDS")
num_on_scaff = rev(sort(table(sonb$chromo)))
totalscaffs = length(num_on_scaff)
print(paste("TOTAL SCAFFS READ:",totalscaffs))
if (totalscaffs != num_to_keep) {
num_to_keep=totalscaffs
}
outfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_Dxy_WINDOWS_chrfix_",num_to_keep,"-",chrom,".txt",sep="")
pngfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxyMEAN_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sumfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySUMS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sdvfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySDVS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
print("SUBSETTING SCAFFOLDS")
scaff_subset = names(num_on_scaff)[1:num_to_keep]
son = sonb[sonb$chromo %in% scaff_subset,]
matches = match(son$chromo,scaff_subset)
son$chromnum = matches
son = son[order(son[,"chromnum"], son[,"position"] ),]
head(son)
summary(son$dxy)
summary(son$position)
closest_snp = min(son$position)
furthest_snp = max(son$position)
## son and chi are exactky the same! yay
nscaf = (length(scaff_subset))
print(paste("NUMBER OF SCAFFS TO OUTPUT:",nscaf))
nums = as.numeric(num_on_scaff)
scaf_list = c()
start_list = c()
mean_list = c()
dev_list = c()
snp_list = c()
sum_list = c()
print("BEGINNING SCAFFOLDS")
#for (i in 1:100) {
for (i in 1:length(scaff_subset)) {
print(paste(i," of ",nscaf,spp))
scaf = (scaff_subset[i])
number = nums[i]
this_scaf = son[son$chromo==scaf,]
#closest = min(this_scaf$position)
furthest = max(this_scaf$position)
## get windows
window_ends = seq(windowsize,max(furthest,windowsize),movesize)
window_starts = seq(1,furthest,movesize)
window_starts = window_starts[1:length(window_ends)]
windows = as.data.frame(cbind("starts"=window_starts,"ends"=window_ends))
print(nrow(windows))
for (j in 1:nrow(windows)){
window = windows[j,]
if(j %% 100 == 0) {
print(window)
}
start = window$starts
end = window$ends
this_window = this_scaf[this_scaf$position>=start,]
this_window = this_window[this_window$position<=end,]
num_snps = nrow(this_window)
average_dxy = mean(this_window$dxy)
deviation_dxy = sd(this_window$dxy)
sum_dxy = sum(this_window$dxy)
scaf_list = c(scaf_list,scaf)
start_list = c(start_list,start)
mean_list = c(mean_list,average_dxy)
dev_list = c(dev_list,deviation_dxy)
snp_list = c(snp_list,num_snps)
sum_list = c(sum_list,sum_dxy)
}
output_dataframe = cbind(scaf_list,
as.numeric(start_list),
as.numeric(mean_list),
as.numeric(dev_list),
as.numeric(snp_list),
as.numeric(sum_list))
colnames(output_dataframe) = c("scafs","starts","means","stdvs","snps","sums")
}
head(output_dataframe)
png(pngfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"means"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Mean DXY",
ylim=c(0,1))
dev.off()
png(sumfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"sums"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Sum DXY")
dev.off()
write.table(output_dataframe,outfile)
png(sdvfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"stdvs"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="STDV DXY")
dev.off()
write.table(output_dataframe,outfile)
}
x <- file.info(listsonfiles)
x
x <- x[order(-x$size),]
x
listsonfiles <- listsonfiles[order(-x$size),]
listsonfiles <- listsonfiles[order(-x$size)]
listsonfiles
head(listsonfiles)
head(listsonfiles)
x <- file.info(listsonfiles)
x$size
order(-x$size)
listsonfiles[order(-x$size)]
listsonfiles = list.files(path="/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/raw",
pattern="-chr",full.names = T)
x <- file.info(listsonfiles)
listsonfiles <- listsonfiles[order(-x$size)]
head(listsonfiles)
listsonfiles = list.files(path="/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/raw",
pattern="-chr",full.names = T)
x <- file.info(listsonfiles)
listsonfiles <- listsonfiles[order(x$size)]
print(spp)
num_to_keep = orig_num_to_keep
#sonfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/raw/",spp,"_SON_Dxy_persite_chrfix.txt",sep="")
sppsonfiles = listsonfiles[grep(spp,listsonfiles)]
for(sonfile in sppsonfiles) {
chrom=strsplit(strsplit(sonfile,"-")[[1]][2],"\\.")[[1]][1]
print("READING CSV")
sonb = read.csv(sonfile,sep="\t",header=T)
print(chrom)
print("READING IN SCAFFOLDS")
num_on_scaff = rev(sort(table(sonb$chromo)))
totalscaffs = length(num_on_scaff)
print(paste("TOTAL SCAFFS READ:",totalscaffs))
if (totalscaffs != num_to_keep) {
num_to_keep=totalscaffs
}
outfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_Dxy_WINDOWS_chrfix_",num_to_keep,"-",chrom,".txt",sep="")
pngfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxyMEAN_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sumfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySUMS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sdvfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySDVS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
print("SUBSETTING SCAFFOLDS")
scaff_subset = names(num_on_scaff)[1:num_to_keep]
son = sonb[sonb$chromo %in% scaff_subset,]
matches = match(son$chromo,scaff_subset)
son$chromnum = matches
son = son[order(son[,"chromnum"], son[,"position"] ),]
head(son)
summary(son$dxy)
summary(son$position)
closest_snp = min(son$position)
furthest_snp = max(son$position)
## son and chi are exactky the same! yay
nscaf = (length(scaff_subset))
print(paste("NUMBER OF SCAFFS TO OUTPUT:",nscaf))
nums = as.numeric(num_on_scaff)
scaf_list = c()
start_list = c()
mean_list = c()
dev_list = c()
snp_list = c()
sum_list = c()
print("BEGINNING SCAFFOLDS")
#for (i in 1:100) {
for (i in 1:length(scaff_subset)) {
print(paste(i," of ",nscaf,spp))
scaf = (scaff_subset[i])
number = nums[i]
this_scaf = son[son$chromo==scaf,]
#closest = min(this_scaf$position)
furthest = max(this_scaf$position)
## get windows
window_ends = seq(windowsize,max(furthest,windowsize),movesize)
window_starts = seq(1,furthest,movesize)
window_starts = window_starts[1:length(window_ends)]
windows = as.data.frame(cbind("starts"=window_starts,"ends"=window_ends))
totwindows=(nrow(windows))
print(totwindows)
for (j in 1:nrow(windows)){
window = windows[j,]
if(j %% 1000 == 0) {
print(paste(window,"/",totwindows))
}
start = window$starts
end = window$ends
this_window = this_scaf[this_scaf$position>=start,]
this_window = this_window[this_window$position<=end,]
num_snps = nrow(this_window)
average_dxy = mean(this_window$dxy)
deviation_dxy = sd(this_window$dxy)
sum_dxy = sum(this_window$dxy)
scaf_list = c(scaf_list,scaf)
start_list = c(start_list,start)
mean_list = c(mean_list,average_dxy)
dev_list = c(dev_list,deviation_dxy)
snp_list = c(snp_list,num_snps)
sum_list = c(sum_list,sum_dxy)
}
output_dataframe = cbind(scaf_list,
as.numeric(start_list),
as.numeric(mean_list),
as.numeric(dev_list),
as.numeric(snp_list),
as.numeric(sum_list))
colnames(output_dataframe) = c("scafs","starts","means","stdvs","snps","sums")
}
head(output_dataframe)
png(pngfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"means"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Mean DXY",
ylim=c(0,1))
dev.off()
png(sumfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"sums"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Sum DXY")
dev.off()
write.table(output_dataframe,outfile)
png(sdvfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"stdvs"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="STDV DXY")
dev.off()
write.table(output_dataframe,outfile)
}
View(son)
View(son)
View(son)
head(son)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(x=as.numeric(son[,"position"]),y=as.numeric(son[,"dxy"]),
col=as.numeric(as.factor(son[,"chromo"])),cex=0.2,
main=spp,xlab="Position",ylab="Raw DXY",
ylim=c(0,1))
dev.off()
dev.off()
specieslist = c("bel",
"bil",
"bru",
"cri",
"cur",
"fla",
"fus",
"mel",
"sin",
"nit"
)
chromlist=c("10","11","12","13","14","15","16","17","18","19",
"1A","1B","2","20","21","22","23","24","25","26","27","28","3",
"4","4A","5","6","7","8","9","LG2","LG5","LGE22",
"mtDNA","Z")
orig_num_to_keep = 40
windowsize = 100000
movesize = 10000
listsonfiles = list.files(path="/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/raw",
pattern="-chr",full.names = T)
x <- file.info(listsonfiles)
listsonfiles <- listsonfiles[order(x$size)]
for (spp in rev(specieslist)) {
print(spp)
num_to_keep = orig_num_to_keep
#sonfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/raw/",spp,"_SON_Dxy_persite_chrfix.txt",sep="")
sppsonfiles = listsonfiles[grep(spp,listsonfiles)]
for(sonfile in sppsonfiles) {
chrom=strsplit(strsplit(sonfile,"-")[[1]][2],"\\.")[[1]][1]
print("READING CSV")
sonb = read.csv(sonfile,sep="\t",header=T)
print(chrom)
print("READING IN SCAFFOLDS")
num_on_scaff = rev(sort(table(sonb$chromo)))
totalscaffs = length(num_on_scaff)
print(paste("TOTAL SCAFFS READ:",totalscaffs))
if (totalscaffs != num_to_keep) {
num_to_keep=totalscaffs
}
outfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_Dxy_WINDOWS_chrfix_",num_to_keep,"-",chrom,".txt",sep="")
pngfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxyMEAN_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sumfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySUMS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
sdvfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxySDVS_WINDOWS_chrfix_",num_to_keep,"-",chrom,".png",sep="")
rawfile = paste("/Users/kprovost/Dropbox (AMNH)/Dissertation/CHAPTER2_GENOMES/ANALYSIS/DXY/textfiles/",spp,"_SON_DxyRAW_RAW_chrfix_",num_to_keep,"-",chrom,".png",sep="")
print("SUBSETTING SCAFFOLDS")
scaff_subset = names(num_on_scaff)[1:num_to_keep]
son = sonb[sonb$chromo %in% scaff_subset,]
matches = match(son$chromo,scaff_subset)
son$chromnum = matches
son = son[order(son[,"chromnum"], son[,"position"] ),]
head(son)
summary(son$dxy)
summary(son$position)
closest_snp = min(son$position)
furthest_snp = max(son$position)
## son and chi are exactky the same! yay
nscaf = (length(scaff_subset))
print(paste("NUMBER OF SCAFFS TO OUTPUT:",nscaf))
nums = as.numeric(num_on_scaff)
scaf_list = c()
start_list = c()
mean_list = c()
dev_list = c()
snp_list = c()
sum_list = c()
png(rawfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(x=as.numeric(son[,"position"]),y=as.numeric(son[,"dxy"]),
col=as.numeric(as.factor(son[,"chromo"])),cex=0.2,
main=spp,xlab="Position",ylab="Raw DXY",
ylim=c(0,1))
dev.off()
print("BEGINNING SCAFFOLDS")
#for (i in 1:100) {
for (i in 1:length(scaff_subset)) {
print(paste(i," of ",nscaf,spp))
scaf = (scaff_subset[i])
number = nums[i]
this_scaf = son[son$chromo==scaf,]
#closest = min(this_scaf$position)
furthest = max(this_scaf$position)
## get windows
window_ends = seq(windowsize,max(furthest,windowsize),movesize)
window_starts = seq(1,furthest,movesize)
window_starts = window_starts[1:length(window_ends)]
windows = as.data.frame(cbind("starts"=window_starts,"ends"=window_ends))
totwindows=(nrow(windows))
print(totwindows)
for (j in 1:nrow(windows)){
window = windows[j,]
if(j %% 1000 == 0) {
print(paste(window,"/",totwindows))
}
start = window$starts
end = window$ends
this_window = this_scaf[this_scaf$position>=start,]
this_window = this_window[this_window$position<=end,]
num_snps = nrow(this_window)
average_dxy = mean(this_window$dxy)
deviation_dxy = sd(this_window$dxy)
sum_dxy = sum(this_window$dxy)
scaf_list = c(scaf_list,scaf)
start_list = c(start_list,start)
mean_list = c(mean_list,average_dxy)
dev_list = c(dev_list,deviation_dxy)
snp_list = c(snp_list,num_snps)
sum_list = c(sum_list,sum_dxy)
}
output_dataframe = cbind(scaf_list,
as.numeric(start_list),
as.numeric(mean_list),
as.numeric(dev_list),
as.numeric(snp_list),
as.numeric(sum_list))
colnames(output_dataframe) = c("scafs","starts","means","stdvs","snps","sums")
}
head(output_dataframe)
png(pngfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"means"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Mean DXY",
ylim=c(0,1))
dev.off()
png(sumfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"sums"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="Sum DXY")
dev.off()
write.table(output_dataframe,outfile)
png(sdvfile,width=700,height=350)
#plot(output_dataframe[,"starts"],output_dataframe[,"means"])
palette(c("red","orange","goldenrod","green","blue","purple",
"cyan","black","brown","magenta"))
plot(as.numeric(output_dataframe[,"stdvs"]),col=as.numeric(as.factor(output_dataframe[,"scafs"])),cex=0.2,
main=spp,xlab="Window (Scaffold)",ylab="STDV DXY")
dev.off()
write.table(output_dataframe,outfile)
}
}
1 < 0
df=read.table("/Users/kprovost/Dropbox (AMNH)/SON_CHI_Toxostoma_curvirostre.ml.2D.txt")
head(df)
heatmap(df)
df=read.table("/Users/kprovost/Dropbox (AMNH)/SON_CHI_Toxostoma_curvirostre.ml.2D.txt")
corrplot::corrplot(df,is.corr=F)
corrplot::corrplot(as.matrix(df),is.corr=F)
corrplot::corrplot(as.matrix(df),is.corr=F,method="color")
corrplot::corrplot(log10(as.matrix(df)),is.corr=F,method="color")
library(warbleR)
## just get metadata
test = query_xc(qword="Zonotrichia leucophrys",download=F)
test
write.table(test,"test.txt")
getwd()
write.table(test,"~/test.txt")
